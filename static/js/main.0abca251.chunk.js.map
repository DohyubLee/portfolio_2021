{"version":3,"sources":["components/MobSlider.js","components/WebSlider.js","pages/Home.js","components/Header.js","pages/Movie.js","pages/Detail.js","App.js","reportWebVitals.js","index.js"],"names":["MobSlider","props","imageConfig","movieDatas","className","results","length","map","data","to","id","src","base_url","poster_sizes","poster_path","index","Skeleton","sx","bgcolor","variant","WebSlider","isTablet","useMediaQuery","query","isLarge","settings","dots","infinite","speed","slidesToShow","slidesToScroll","swipe","Home","api_key","useState","popularDatas","setPopularDatas","nowPlayingDatas","setNowPlayingDatas","upcomingDatas","setUpcomingDatas","useEffect","axios","method","baseURL","url","params","language","then","res","isMobile","backdrop_sizes","backdrop_path","height","title","overview","width","NavList","name","reference","ref","isActive","Header","isShow","setIsShow","isDrop","setIsDrop","prevScrollpos","window","pageYOffset","isTabletOrMobile","isSmallWitdh","mobNavRef","useRef","navIcRef","addEventListener","handleScroll","closeMobNav","console","log","removeEventListener","currentScrollPos","event","current","contains","target","onClick","type","placeholder","Movie","genres","category","setMovieDatas","fetching","page","categoryName","popular","now_playing","upcoming","loadData","scrollHeight","document","documentElement","scrollTop","clientHeight","a","fetchData","genre_ids","Detail","useSearchParams","movieId","get","details","setDetails","cast","crew","credits","setCredits","isWish","setIsWish","release_date","profile_sizes","profile_path","character","App","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","basename","process","getElementById"],"mappings":"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","file":"static/js/main.0abca251.chunk.js","sourcesContent":["import { Skeleton } from '@mui/material';\r\nimport React, { Fragment } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './MobSlider.scss';\r\n\r\nconst MobSlider = props => {\r\n  const { imageConfig, movieDatas } = props;\r\n  const skelDefaultArr = [0, 1, 2, 3, 4, 5, 6, 7];\r\n\r\n  return (\r\n    <div className=\"mob-slider\">\r\n      <ul>\r\n        {movieDatas.results.length > 0 ? (\r\n          <Fragment>\r\n            {movieDatas.results.map(data => {\r\n              return (\r\n                <li key={data.id}>\r\n                  <Link to={`/detail?movie_id=${data.id}`} className=\"img-link\">\r\n                    <img\r\n                      src={`${imageConfig.base_url}${imageConfig.poster_sizes[2]}${data.poster_path}`}\r\n                    />\r\n                  </Link>\r\n                </li>\r\n              );\r\n            })}\r\n          </Fragment>\r\n        ) : (\r\n          <Fragment>\r\n            {skelDefaultArr.map((data, index) => {\r\n              return (\r\n                <li key={data}>\r\n                  <Skeleton\r\n                    className=\"custom-sk\"\r\n                    sx={{ bgcolor: 'grey.900' }}\r\n                    variant=\"rectangular\"\r\n                  />\r\n                </li>\r\n              );\r\n            })}\r\n          </Fragment>\r\n        )}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MobSlider;\r\n","import { Skeleton } from '@mui/material';\r\nimport React from 'react';\r\nimport './WebSlider.scss';\r\nimport { useMediaQuery } from 'react-responsive';\r\nimport Slider from 'react-slick';\r\nimport 'slick-carousel/slick/slick.css';\r\nimport 'slick-carousel/slick/slick-theme.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst WebSlider = props => {\r\n  const { imageConfig, movieDatas } = props;\r\n  const skelDefaultArr = [0, 1, 2, 3, 4, 5, 6, 7];\r\n  const isTablet = useMediaQuery({ query: '(min-width: 768px)' });\r\n  const isLarge = useMediaQuery({ query: '(min-width: 992px)' });\r\n\r\n  let settings = {\r\n    dots: true,\r\n    infinite: true,\r\n    speed: 500,\r\n    slidesToShow: 4,\r\n    slidesToScroll: 4,\r\n    swipe: false,\r\n  };\r\n\r\n  if (isTablet && isLarge) {\r\n    settings = { ...settings, slidesToShow: 6, slidesToScroll: 6 };\r\n  } else if (isTablet) {\r\n    settings = { ...settings, slidesToShow: 5, slidesToScroll: 5 };\r\n  }\r\n\r\n  return (\r\n    <div className=\"slider-wrap\">\r\n      <Slider {...settings}>\r\n        {movieDatas.results.length > 0\r\n          ? movieDatas.results.map(data => {\r\n              return (\r\n                <div className=\"poster-box\" key={data.id}>\r\n                  <Link to={`/detail?movie_id=${data.id}`} className=\"img-link\">\r\n                    <img\r\n                      src={`${imageConfig.base_url}${imageConfig.poster_sizes[3]}${data.poster_path}`}\r\n                    />\r\n                  </Link>\r\n                </div>\r\n              );\r\n            })\r\n          : skelDefaultArr.map(data => {\r\n              return (\r\n                <div className=\"poster-box skel\" key={data}>\r\n                  <Skeleton\r\n                    className=\"custom-sk\"\r\n                    sx={{ bgcolor: 'grey.900' }}\r\n                    variant=\"rectangular\"\r\n                  />\r\n                </div>\r\n              );\r\n            })}\r\n      </Slider>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WebSlider;\r\n","import React, { Fragment, useEffect, useState } from 'react';\r\nimport './Home.scss';\r\nimport { isMobile } from 'react-device-detect';\r\nimport axios from 'axios';\r\nimport { Skeleton } from '@mui/material';\r\nimport MobSlider from '../components/MobSlider';\r\nimport WebSlider from '../components/WebSlider';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Home = props => {\r\n  const { imageConfig, api_key } = props;\r\n\r\n  const [popularDatas, setPopularDatas] = useState({\r\n    results: [],\r\n  });\r\n  const [nowPlayingDatas, setNowPlayingDatas] = useState({\r\n    results: [],\r\n  });\r\n  const [upcomingDatas, setUpcomingDatas] = useState({\r\n    results: [],\r\n  });\r\n\r\n  useEffect(() => {\r\n    axios({\r\n      method: 'get',\r\n      baseURL: 'https://api.themoviedb.org',\r\n      url: '/3/movie/popular',\r\n      params: {\r\n        api_key,\r\n        language: 'ko',\r\n      },\r\n    }).then(res => {\r\n      setPopularDatas(res.data);\r\n    });\r\n    axios({\r\n      method: 'get',\r\n      baseURL: 'https://api.themoviedb.org',\r\n      url: '/3/movie/now_playing',\r\n      params: {\r\n        api_key,\r\n        language: 'ko',\r\n      },\r\n    }).then(res => {\r\n      setNowPlayingDatas(res.data);\r\n    });\r\n    axios({\r\n      method: 'get',\r\n      baseURL: 'https://api.themoviedb.org',\r\n      url: '/3/movie/upcoming',\r\n      params: {\r\n        api_key,\r\n        language: 'ko',\r\n      },\r\n    }).then(res => {\r\n      setUpcomingDatas(res.data);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <Fragment>\r\n      {isMobile ? (\r\n        <div className=\"mob-home\">\r\n          <div className=\"main-backdrop\">\r\n            {popularDatas.results.length > 0 ? (\r\n              <img\r\n                src={`${imageConfig.base_url}${imageConfig.backdrop_sizes[3]}${popularDatas.results[0].backdrop_path}`}\r\n              />\r\n            ) : (\r\n              <div className=\"skel-wrap\">\r\n                <Skeleton sx={{ bgcolor: 'grey.900' }} variant=\"rectangular\" height={'100%'} />\r\n              </div>\r\n            )}\r\n\r\n            <div className=\"info-wrap\">\r\n              {popularDatas.results.length > 0 ? (\r\n                <Fragment>\r\n                  <div className=\"title\">{popularDatas.results[0].title}</div>\r\n                  <div className=\"overview\">{popularDatas.results[0].overview}</div>\r\n                  <div className=\"detail\">\r\n                    <Link\r\n                      to={`/detail?movie_id=${popularDatas.results[0].id}`}\r\n                      className=\"text-link\"\r\n                    >\r\n                      더보기\r\n                    </Link>\r\n                  </div>\r\n                </Fragment>\r\n              ) : (\r\n                <Fragment>\r\n                  <div className=\"title\">\r\n                    <Skeleton sx={{ bgcolor: 'grey.900' }} variant=\"rectangular\" width={'160px'} />\r\n                  </div>\r\n                  <div className=\"overview\">\r\n                    <Skeleton sx={{ bgcolor: 'grey.900' }} variant=\"rectangular\" height={'70px'} />\r\n                  </div>\r\n                </Fragment>\r\n              )}\r\n            </div>\r\n          </div>\r\n          <div className=\"contents-wrap\">\r\n            <div className=\"slider-box\">\r\n              <div className=\"category-title\">\r\n                <span className=\"category\">인기 작품들</span>\r\n                <Link to=\"/popular\" className=\"text-link\">\r\n                  더보기\r\n                </Link>\r\n              </div>\r\n              <MobSlider imageConfig={imageConfig} movieDatas={popularDatas} />\r\n            </div>\r\n            <div className=\"slider-box\">\r\n              <div className=\"category-title\">\r\n                <span className=\"category\">현재 상영중</span>\r\n                <Link to=\"/now-playing\" className=\"text-link\">\r\n                  더보기\r\n                </Link>\r\n              </div>\r\n              <MobSlider imageConfig={imageConfig} movieDatas={nowPlayingDatas} />\r\n            </div>\r\n            <div className=\"slider-box\">\r\n              <div className=\"category-title\">\r\n                <span className=\"category\">개봉 예정</span>\r\n                <Link to=\"/upcoming\" className=\"text-link\">\r\n                  더보기\r\n                </Link>\r\n              </div>\r\n              <MobSlider imageConfig={imageConfig} movieDatas={upcomingDatas} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div className=\"pc-home\">\r\n          <div className=\"main-backdrop\">\r\n            {popularDatas.results.length > 0 ? (\r\n              <img\r\n                src={`${imageConfig.base_url}${imageConfig.backdrop_sizes[3]}${popularDatas.results[0].backdrop_path}`}\r\n              />\r\n            ) : (\r\n              <div className=\"skel-wrap\">\r\n                <Skeleton sx={{ bgcolor: 'grey.900' }} variant=\"rectangular\" height={'100%'} />\r\n              </div>\r\n            )}\r\n            <div className=\"info-wrap\">\r\n              {popularDatas.results.length > 0 ? (\r\n                <Fragment>\r\n                  <div className=\"title\">{popularDatas.results[0].title}</div>\r\n                  <div className=\"overview\">{popularDatas.results[0].overview}</div>\r\n                  <div className=\"detail\">\r\n                    <Link\r\n                      to={`/detail?movie_id=${popularDatas.results[0].id}`}\r\n                      className=\"text-link\"\r\n                    >\r\n                      더보기\r\n                    </Link>\r\n                  </div>\r\n                </Fragment>\r\n              ) : (\r\n                <Fragment>\r\n                  <div className=\"title\">\r\n                    <Skeleton sx={{ bgcolor: 'grey.900' }} variant=\"rectangular\" width={'250px'} />\r\n                  </div>\r\n                  <div className=\"overview\">\r\n                    <Skeleton sx={{ bgcolor: 'grey.900' }} variant=\"rectangular\" height={'70px'} />\r\n                  </div>\r\n                </Fragment>\r\n              )}\r\n            </div>\r\n          </div>\r\n          <div className=\"contents-wrap\">\r\n            <div className=\"slider-box\">\r\n              <div className=\"category-title\">\r\n                <span className=\"category\">인기 작품들</span>\r\n                <Link to=\"/popular\" className=\"text-link\">\r\n                  더보기\r\n                </Link>\r\n              </div>\r\n              <WebSlider imageConfig={imageConfig} movieDatas={popularDatas} />\r\n            </div>\r\n            <div className=\"slider-box\">\r\n              <div className=\"category-title\">\r\n                <span className=\"category\">현재 상영중</span>\r\n                <Link to=\"/now_playing\" className=\"text-link\">\r\n                  더보기\r\n                </Link>\r\n              </div>\r\n              <WebSlider imageConfig={imageConfig} movieDatas={nowPlayingDatas} />\r\n            </div>\r\n            <div className=\"slider-box\">\r\n              <div className=\"category-title\">\r\n                <span className=\"category\">개봉 예정</span>\r\n                <Link to=\"/upcoming\" className=\"text-link\">\r\n                  더보기\r\n                </Link>\r\n              </div>\r\n              <WebSlider imageConfig={imageConfig} movieDatas={upcomingDatas} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { Fragment, useEffect, useRef, useState } from 'react';\r\nimport './Header.scss';\r\nimport { useMediaQuery } from 'react-responsive';\r\nimport { Link, NavLink } from 'react-router-dom';\r\n\r\nconst Header = props => {\r\n  const { isMobile } = props;\r\n  const [isShow, setIsShow] = useState(true);\r\n  const [isDrop, setIsDrop] = useState(false);\r\n  let prevScrollpos = window.pageYOffset;\r\n  const isTabletOrMobile = useMediaQuery({ query: '(max-width: 767px)' });\r\n  const isSmallWitdh = useMediaQuery({ query: '(max-width: 575px)' });\r\n  const mobNavRef = useRef();\r\n  const navIcRef = useRef();\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('scroll', handleScroll);\r\n    window.addEventListener('mousedown', closeMobNav);\r\n    return () => {\r\n      console.log('컴포넌트 종료');\r\n      window.removeEventListener('scroll', handleScroll);\r\n      window.removeEventListener('mousedown', closeMobNav);\r\n    };\r\n  }, []);\r\n\r\n  const handleScroll = () => {\r\n    var currentScrollPos = window.pageYOffset;\r\n\r\n    if (isMobile) {\r\n      if (currentScrollPos < 64) {\r\n        setIsShow(true);\r\n        setIsDrop(false);\r\n      } else {\r\n        if (prevScrollpos > currentScrollPos) {\r\n          setIsShow(true);\r\n          setIsDrop(false);\r\n        } else {\r\n          setIsShow(false);\r\n        }\r\n      }\r\n    } else {\r\n      if (prevScrollpos > currentScrollPos) {\r\n        setIsShow(true);\r\n        setIsDrop(false);\r\n      } else {\r\n        setIsShow(false);\r\n      }\r\n    }\r\n\r\n    prevScrollpos = currentScrollPos;\r\n  };\r\n\r\n  const closeMobNav = event => {\r\n    // 해당 박스 존재유무 파악\r\n    if (!!mobNavRef.current) {\r\n      // 해당 박스 영역 외에서 클릭했을시\r\n      if (!mobNavRef.current.contains(event.target)) {\r\n        // 아이콘 영역 외에서만 동작시키기위해\r\n        if (!navIcRef.current.contains(event.target)) {\r\n          setIsDrop(false);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const openDropNav = () => {\r\n    setIsDrop(!isDrop);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      {isMobile ? (\r\n        <header className={isShow ? 'mob-header' : 'mob-header hide'}>\r\n          <div className=\"header-items\">\r\n            <div className=\"left-wrap\">\r\n              {isTabletOrMobile && (\r\n                <button className=\"nav-open-btn\" onClick={openDropNav} ref={navIcRef}>\r\n                  <i className=\"fas fa-bars\"></i>\r\n                </button>\r\n              )}\r\n              <Link to=\"/\" className=\"main-ic\">\r\n                <i className=\"fas fa-video\"></i>\r\n              </Link>\r\n              {!isTabletOrMobile && <NavList name={null} reference={null} />}\r\n            </div>\r\n            <div className=\"right-wrap\">\r\n              <form>\r\n                <input type=\"text\" placeholder=\"검색\" />\r\n              </form>\r\n            </div>\r\n            {isTabletOrMobile && isDrop && isShow && (\r\n              <NavList name={'nav-dropdown'} reference={mobNavRef} />\r\n            )}\r\n          </div>\r\n        </header>\r\n      ) : (\r\n        <header className={isShow ? 'pc-header' : 'pc-header hide'}>\r\n          <div className=\"header-items\">\r\n            <div className=\"left-wrap\">\r\n              <Link to=\"/\" className=\"main-ic\">\r\n                <i className=\"fas fa-video\"></i>\r\n              </Link>\r\n              {isSmallWitdh ? (\r\n                <div className=\"dropdown-wrap\">\r\n                  <button className=\"dropdown-btn\">메뉴</button>\r\n                  <NavList name={'contents'} reference={null} />\r\n                </div>\r\n              ) : (\r\n                <NavList name={null} reference={null} />\r\n              )}\r\n            </div>\r\n            <div className=\"right-wrap\">\r\n              <form>\r\n                <input type=\"text\" placeholder=\"검색\" />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </header>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nconst NavList = props => {\r\n  const { name, reference } = props;\r\n\r\n  return (\r\n    <ul className={name} ref={reference}>\r\n      <li>\r\n        <NavLink to=\"/now-playing\" className={({ isActive }) => (isActive ? 'active' : 'nav-tab')}>\r\n          현재 상영 중\r\n        </NavLink>\r\n      </li>\r\n      <li>\r\n        <NavLink to=\"/popular\" className={({ isActive }) => (isActive ? 'active' : 'nav-tab')}>\r\n          인기\r\n        </NavLink>\r\n      </li>\r\n      <li>\r\n        <NavLink to=\"/upcoming\" className={({ isActive }) => (isActive ? 'active' : 'nav-tab')}>\r\n          개봉 예정\r\n        </NavLink>\r\n      </li>\r\n      <li>\r\n        <NavLink to=\"/my-list\" className={({ isActive }) => (isActive ? 'active' : 'nav-tab')}>\r\n          찜한 콘텐츠\r\n        </NavLink>\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { Fragment, useEffect, useState } from 'react';\r\nimport './Movie.scss';\r\nimport { isMobile } from 'react-device-detect';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Movie = props => {\r\n  const { imageConfig, api_key, genres, category } = props;\r\n  const [movieDatas, setMovieDatas] = useState({\r\n    results: [],\r\n  });\r\n  let fetching = false;\r\n  // 맨처음 로드전 height가 정해지지 않아서 데이터 다 받고 진행시 사용을 위해\r\n  let page = 1;\r\n  const categoryName = {\r\n    popular: '인기 작품들',\r\n    now_playing: '현재 상영중',\r\n    upcoming: '개봉 예정',\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   window.addEventListener('scroll', handleScroll);\r\n  //   // loadData(page);\r\n  //   return () => {\r\n  //     console.log('컴포넌트 종료');\r\n  //     window.removeEventListener('scroll', handleScroll);\r\n  //   };\r\n  // }, []);\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('scroll', handleScroll);\r\n    loadData(page);\r\n    return () => {\r\n      window.removeEventListener('scroll', handleScroll);\r\n    };\r\n  }, [category]);\r\n\r\n  const handleScroll = () => {\r\n    const scrollHeight = document.documentElement.scrollHeight;\r\n    const scrollTop = document.documentElement.scrollTop;\r\n    const clientHeight = document.documentElement.clientHeight;\r\n\r\n    if (scrollTop + clientHeight >= scrollHeight && fetching) {\r\n      loadData(++page);\r\n    }\r\n  };\r\n\r\n  const loadData = async page => {\r\n    await axios({\r\n      method: 'get',\r\n      baseURL: 'https://api.themoviedb.org',\r\n      url: `/3/movie/${category}`,\r\n      params: {\r\n        api_key,\r\n        language: 'ko',\r\n        page,\r\n      },\r\n    }).then(res => {\r\n      if (page === 1) {\r\n        setMovieDatas(fetchData => {\r\n          return { ...fetchData, ...res.data };\r\n        });\r\n      } else {\r\n        setMovieDatas(fetchData => {\r\n          return {\r\n            ...fetchData,\r\n            ...res.data,\r\n            results: [...fetchData.results, ...res.data.results],\r\n          };\r\n        });\r\n      }\r\n      fetching = true;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      {isMobile ? (\r\n        <div className=\"mob-movie\">\r\n          <h3>{categoryName[category]}</h3>\r\n          <ul>\r\n            {movieDatas.results.map(data => {\r\n              return (\r\n                <li key={data.id}>\r\n                  <Link to={`/detail?movie_id=${data.id}`} className=\"img-link\">\r\n                    <img\r\n                      src={`${imageConfig.base_url}${imageConfig.backdrop_sizes[3]}${data.backdrop_path}`}\r\n                    />\r\n                  </Link>\r\n                  <div className=\"info\">\r\n                    <div className=\"title\">{data.title}</div>\r\n                    <div className=\"genre\">\r\n                      <span className=\"genre-title\">장르: </span>\r\n                      {data.genre_ids.map(id => {\r\n                        return (\r\n                          <span key={id} className=\"genre-name\">\r\n                            {!!genres[id] ? genres[id] : '미확인'}\r\n                          </span>\r\n                        );\r\n                      })}\r\n                    </div>\r\n                  </div>\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        </div>\r\n      ) : (\r\n        <div className=\"web-movie\">\r\n          <div className=\"contents-wrap\">\r\n            <h3>{categoryName[category]}</h3>\r\n            <ul>\r\n              {movieDatas.results.map(data => {\r\n                return (\r\n                  <li key={data.id}>\r\n                    <Link to={`/detail?movie_id=${data.id}`} className=\"text-link\">\r\n                      <img\r\n                        src={`${imageConfig.base_url}${imageConfig.backdrop_sizes[3]}${data.backdrop_path}`}\r\n                      />\r\n                    </Link>\r\n                    <div className=\"info\">\r\n                      <div className=\"title\">{data.title}</div>\r\n                      <div className=\"genre\">\r\n                        <span className=\"genre-title\">장르: </span>\r\n                        {data.genre_ids.map(id => {\r\n                          return (\r\n                            <span key={id} className=\"genre-name\">\r\n                              {!!genres[id] ? genres[id] : '미확인'}\r\n                            </span>\r\n                          );\r\n                        })}\r\n                      </div>\r\n                    </div>\r\n                  </li>\r\n                );\r\n              })}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Movie;\r\n","import React, { Fragment, useEffect, useState } from 'react';\r\nimport { useParams, useSearchParams } from 'react-router-dom';\r\nimport './Detail.scss';\r\nimport { isMobile } from 'react-device-detect';\r\nimport axios from 'axios';\r\nimport { Skeleton } from '@mui/material';\r\n\r\nconst Detail = props => {\r\n  const { api_key, imageConfig } = props;\r\n  let [searchParams] = useSearchParams();\r\n  let movieId = searchParams.get('movie_id');\r\n  const [details, setDetails] = useState({\r\n    id: null,\r\n    title: null,\r\n  });\r\n  const [credits, setCredits] = useState({\r\n    id: null,\r\n    cast: [],\r\n    crew: [],\r\n  });\r\n  const [isWish, setIsWish] = useState(false);\r\n  const skelDefaultArr = [0, 1, 2, 3, 4, 5, 6, 7];\r\n\r\n  useEffect(() => {\r\n    axios({\r\n      method: 'get',\r\n      baseURL: 'https://api.themoviedb.org',\r\n      url: `/3/movie/${movieId}`,\r\n      params: {\r\n        api_key,\r\n        language: 'ko',\r\n      },\r\n    }).then(res => {\r\n      setDetails(res.data);\r\n    });\r\n    axios({\r\n      method: 'get',\r\n      baseURL: 'https://api.themoviedb.org',\r\n      url: `/3/movie/${movieId}/credits`,\r\n      params: {\r\n        api_key,\r\n        language: 'ko',\r\n      },\r\n    }).then(res => {\r\n      setCredits(res.data);\r\n    });\r\n  }, []);\r\n\r\n  const putWishList = () => {\r\n    setIsWish(!isWish);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      {true ? (\r\n        <div className={isMobile ? 'mob-detail' : 'mob-detail web-detail'}>\r\n          <div className=\"backdrop-wrap\">\r\n            {!!details.id && (\r\n              <Fragment>\r\n                <img\r\n                  src={`${imageConfig.base_url}${imageConfig.backdrop_sizes[3]}${details.backdrop_path}`}\r\n                />\r\n                <div className=\"main-info\">\r\n                  <div className=\"title-wrap\">\r\n                    <div className=\"title\">{details.title}</div>\r\n                    <button className=\"wish\" onClick={putWishList}>\r\n                      {isWish ? <i className=\"far fa-heart\"></i> : <i className=\"fas fa-heart\"></i>}\r\n                    </button>\r\n                  </div>\r\n                  <div className=\"genre\">\r\n                    <span className=\"genre-title\">장르: </span>\r\n                    {details.genres.map(data => {\r\n                      return (\r\n                        <span key={data.id} className=\"genre-name\">\r\n                          {!!data.id ? data.name : '미확인'}\r\n                        </span>\r\n                      );\r\n                    })}\r\n                  </div>\r\n                  <div className=\"date\">개봉일: {details.release_date}</div>\r\n                  <div className=\"overview\">{details.overview}</div>\r\n                </div>\r\n              </Fragment>\r\n            )}\r\n          </div>\r\n          <div className=\"cast-wrap\">\r\n            <h3>주요 출연진</h3>\r\n            <ul>\r\n              {credits.cast.length > 0\r\n                ? credits.cast.map(data => {\r\n                    return (\r\n                      <li key={data.id}>\r\n                        <img\r\n                          src={`${imageConfig.base_url}${imageConfig.profile_sizes[1]}${data.profile_path}`}\r\n                        />\r\n                        <div className=\"name\">{data.name}</div>\r\n                        <div className=\"character\">{data.character}</div>\r\n                      </li>\r\n                    );\r\n                  })\r\n                : skelDefaultArr.map(data => {\r\n                    return (\r\n                      <li key={data}>\r\n                        <Skeleton\r\n                          className=\"custom-sk\"\r\n                          sx={{ bgcolor: 'grey.900' }}\r\n                          variant=\"rectangular\"\r\n                        />\r\n                      </li>\r\n                    );\r\n                  })}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div className=\"web-detail\">web</div>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Detail;\r\n","import './App.scss';\r\nimport { Routes, Route } from 'react-router-dom';\r\nimport Home from './pages/Home';\r\nimport Header from './components/Header';\r\nimport { useEffect, useState } from 'react';\r\nimport { isMobile } from 'react-device-detect';\r\nimport axios from 'axios';\r\nimport Movie from './pages/Movie';\r\nimport Detail from './pages/Detail';\r\n\r\nfunction App() {\r\n  const api_key = 'dfebf9cfca6fde7ded33adb1b64575ab';\r\n  const baseURL = 'https://api.themoviedb.org';\r\n  const imageConfig = {\r\n    backdrop_sizes: ['w300', 'w780', 'w1280', 'original'],\r\n    poster_sizes: ['w92', 'w154', 'w185', 'w342', 'w500', 'w780', 'original'],\r\n    profile_sizes: ['w45', 'w185', 'h632', 'original'],\r\n    base_url: 'http://image.tmdb.org/t/p/',\r\n  };\r\n\r\n  const genres = {\r\n    28: '액션',\r\n    12: '모험',\r\n    16: '애니메이션',\r\n    35: '코미디',\r\n    80: '범죄',\r\n    99: '다큐멘터리',\r\n    18: '드라마',\r\n    10751: '가족',\r\n    14: '판타지',\r\n    36: '역사',\r\n    27: '공포',\r\n    10402: '음악',\r\n    9648: '미스터리',\r\n    10749: '로맨스',\r\n    878: 'SF',\r\n    10770: 'TV 영화',\r\n    53: '스릴러',\r\n    10752: '전쟁',\r\n    37: '서부',\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className={isMobile ? 'mob-app' : 'pc-app'}>\r\n        <Header isMobile={isMobile} />\r\n        <Routes>\r\n          <Route path=\"/\" element={<Home imageConfig={imageConfig} api_key={api_key} />} />\r\n          <Route\r\n            path=\"now-playing\"\r\n            element={\r\n              <Movie\r\n                imageConfig={imageConfig}\r\n                api_key={api_key}\r\n                genres={genres}\r\n                category={'now_playing'}\r\n              />\r\n            }\r\n          />\r\n          <Route\r\n            path=\"popular\"\r\n            element={\r\n              <Movie\r\n                imageConfig={imageConfig}\r\n                api_key={api_key}\r\n                genres={genres}\r\n                category={'popular'}\r\n              />\r\n            }\r\n          />\r\n          <Route\r\n            path=\"upcoming\"\r\n            element={\r\n              <Movie\r\n                imageConfig={imageConfig}\r\n                api_key={api_key}\r\n                genres={genres}\r\n                category={'upcoming'}\r\n              />\r\n            }\r\n          />\r\n          <Route path=\"my-list\" element={<h3>upcoming</h3>} />\r\n          <Route path=\"detail\" element={<Detail api_key={api_key} imageConfig={imageConfig} />} />\r\n        </Routes>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    {/* PUBLIC_URL은 /portfolio_2021을 의미 */}\r\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}