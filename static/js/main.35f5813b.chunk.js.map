{"version":3,"sources":["pages/Home.js","components/Header.js","App.js","reportWebVitals.js","index.js"],"names":["Home","props","imageConfig","api_key","isMobile","className","NavList","name","reference","ref","to","isActive","Header","useState","isShow","setIsShow","isDrop","setIsDrop","prevScrollpos","window","pageYOffset","isTabletOrMobile","useMediaQuery","query","isSmallWitdh","mobNavRef","useRef","navIcRef","useEffect","addEventListener","handleScroll","closeMobNav","console","log","removeEventListener","currentScrollPos","event","current","contains","target","onClick","type","placeholder","App","path","element","backdrop_sizes","poster_sizes","profile_sizes","base_url","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.35f5813b.chunk.js","sourcesContent":["import React, { Fragment } from 'react';\r\nimport './Home.scss';\r\nimport { isMobile } from 'react-device-detect';\r\n\r\nconst Home = props => {\r\n  const { imageConfig, api_key } = props;\r\n  return (\r\n    <Fragment>\r\n      {isMobile ? (\r\n        <div className=\"mob-home\">\r\n          <div className=\"main-backdrop\">dd</div>\r\n          <div className=\"contents-wrap\"></div>\r\n        </div>\r\n      ) : (\r\n        <div className=\"pc-home\">PC</div>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { Fragment, useEffect, useRef, useState } from 'react';\r\nimport './Header.scss';\r\nimport { BrowserView, MobileView, isMobile } from 'react-device-detect';\r\nimport { useMediaQuery } from 'react-responsive';\r\nimport { Link, NavLink } from 'react-router-dom';\r\n\r\nconst Header = () => {\r\n  const [isShow, setIsShow] = useState(true);\r\n  const [isDrop, setIsDrop] = useState(false);\r\n  let prevScrollpos = window.pageYOffset;\r\n  const isTabletOrMobile = useMediaQuery({ query: '(max-width: 767px)' });\r\n  const isSmallWitdh = useMediaQuery({ query: '(max-width: 575px)' });\r\n  const mobNavRef = useRef();\r\n  const navIcRef = useRef();\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('scroll', handleScroll);\r\n    window.addEventListener('mousedown', closeMobNav);\r\n    return () => {\r\n      console.log('컴포넌트 종료');\r\n      window.removeEventListener('scroll', handleScroll);\r\n      window.removeEventListener('mousedown', closeMobNav);\r\n    };\r\n  }, []);\r\n\r\n  const handleScroll = () => {\r\n    var currentScrollPos = window.pageYOffset;\r\n\r\n    if (isMobile) {\r\n      if (currentScrollPos < 64) {\r\n        setIsShow(true);\r\n        setIsDrop(false);\r\n      } else {\r\n        if (prevScrollpos > currentScrollPos) {\r\n          setIsShow(true);\r\n          setIsDrop(false);\r\n        } else {\r\n          setIsShow(false);\r\n        }\r\n      }\r\n    } else {\r\n      if (prevScrollpos > currentScrollPos) {\r\n        setIsShow(true);\r\n        setIsDrop(false);\r\n      } else {\r\n        setIsShow(false);\r\n      }\r\n    }\r\n\r\n    prevScrollpos = currentScrollPos;\r\n  };\r\n\r\n  const closeMobNav = event => {\r\n    // 해당 박스 존재유무 파악\r\n    if (!!mobNavRef.current) {\r\n      // 해당 박스 영역 외에서 클릭했을시\r\n      if (!mobNavRef.current.contains(event.target)) {\r\n        // 아이콘 영역 외에서만 동작시키기위해\r\n        if (!navIcRef.current.contains(event.target)) {\r\n          setIsDrop(false);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const openDropNav = () => {\r\n    setIsDrop(!isDrop);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      {isMobile ? (\r\n        <header className={isShow ? 'mob-header' : 'mob-header hide'}>\r\n          <div className=\"header-items\">\r\n            <div className=\"left-wrap\">\r\n              {isTabletOrMobile && (\r\n                <button className=\"nav-open-btn\" onClick={openDropNav} ref={navIcRef}>\r\n                  <i className=\"fas fa-bars\"></i>\r\n                </button>\r\n              )}\r\n              <Link to=\"/\" className=\"main-ic\">\r\n                <i className=\"fas fa-video\"></i>\r\n              </Link>\r\n              {!isTabletOrMobile && <NavList name={null} reference={null} />}\r\n            </div>\r\n            <div className=\"right-wrap\">\r\n              <form>\r\n                <input type=\"text\" placeholder=\"검색\" />\r\n              </form>\r\n            </div>\r\n            {isTabletOrMobile && isDrop && isShow && (\r\n              <NavList name={'nav-dropdown'} reference={mobNavRef} />\r\n            )}\r\n          </div>\r\n        </header>\r\n      ) : (\r\n        <header className={isShow ? 'pc-header' : 'pc-header hide'}>\r\n          <div className=\"header-items\">\r\n            <div className=\"left-wrap\">\r\n              <Link to=\"/\" className=\"main-ic\">\r\n                <i className=\"fas fa-video\"></i>\r\n              </Link>\r\n              {isSmallWitdh ? (\r\n                <div className=\"dropdown-wrap\">\r\n                  <button className=\"dropdown-btn\">메뉴</button>\r\n                  <NavList name={'contents'} reference={null} />\r\n                </div>\r\n              ) : (\r\n                <NavList name={null} reference={null} />\r\n              )}\r\n            </div>\r\n            <div className=\"right-wrap\">\r\n              <form>\r\n                <input type=\"text\" placeholder=\"검색\" />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </header>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nconst NavList = props => {\r\n  const { name, reference } = props;\r\n\r\n  return (\r\n    <ul className={name} ref={reference}>\r\n      <li>\r\n        <NavLink to=\"/now-playing\" className={({ isActive }) => (isActive ? 'active' : 'nav-tab')}>\r\n          현재 상영 중\r\n        </NavLink>\r\n      </li>\r\n      <li>\r\n        <NavLink to=\"/popular\" className={({ isActive }) => (isActive ? 'active' : 'nav-tab')}>\r\n          인기\r\n        </NavLink>\r\n      </li>\r\n      <li>\r\n        <NavLink to=\"/upcoming\" className={({ isActive }) => (isActive ? 'active' : 'nav-tab')}>\r\n          개봉 예정\r\n        </NavLink>\r\n      </li>\r\n      <li>\r\n        <NavLink to=\"/my-list\" className={({ isActive }) => (isActive ? 'active' : 'nav-tab')}>\r\n          찜한 콘텐츠\r\n        </NavLink>\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import './App.scss';\r\nimport { Routes, Route } from 'react-router-dom';\r\nimport Home from './pages/Home';\r\nimport Header from './components/Header';\r\nimport { useEffect, useState } from 'react';\r\nimport { isMobile } from 'react-device-detect';\r\n\r\nfunction App() {\r\n  const api_key = 'dfebf9cfca6fde7ded33adb1b64575ab';\r\n  const baseURL = 'https://api.themoviedb.org';\r\n  const imageConfig = {\r\n    backdrop_sizes: ['w300', 'w780', 'w1280', 'original'],\r\n    poster_sizes: ['w92', 'w154', 'w185', 'w342', 'w500', 'w780', 'original'],\r\n    profile_sizes: ['w45', 'w185', 'h632', 'original'],\r\n    base_url: 'http://image.tmdb.org/t/p/',\r\n  };\r\n  useEffect(() => {}, []);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className={isMobile ? 'mob-app' : 'pc-app'}>\r\n        <Header />\r\n        <Routes>\r\n          <Route path=\"/\" element={<Home api_key={api_key} imageConfig={imageConfig} />} />\r\n          <Route path=\"now-playing\" element={<h3>now-playing</h3>} />\r\n          <Route path=\"popular\" element={<h3>popular11</h3>} />\r\n          <Route path=\"upcoming\" element={<h3>upcoming</h3>} />\r\n          <Route path=\"my-list\" element={<h3>upcoming</h3>} />\r\n        </Routes>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    {/* PUBLIC_URL은 /portfolio_2021을 의미 */}\r\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}