{"version":3,"sources":["components/MobSlider.js","pages/Home.js","components/Header.js","App.js","reportWebVitals.js","index.js"],"names":["MobSlider","props","imageConfig","movieDatas","className","results","length","map","data","src","base_url","poster_sizes","poster_path","index","Skeleton","sx","bgcolor","variant","Home","popularDatas","nowPlayingDatas","upcomingDatas","isMobile","backdrop_sizes","backdrop_path","height","title","overview","width","NavList","name","reference","ref","to","isActive","Header","useState","isShow","setIsShow","isDrop","setIsDrop","prevScrollpos","window","pageYOffset","isTabletOrMobile","useMediaQuery","query","isSmallWitdh","mobNavRef","useRef","navIcRef","useEffect","addEventListener","handleScroll","closeMobNav","console","log","removeEventListener","currentScrollPos","event","current","contains","target","onClick","type","placeholder","App","api_key","setPopularDatas","setNowPlayingDatas","setUpcomingDatas","axios","method","baseURL","url","params","language","then","res","path","element","profile_sizes","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.c03c066f.chunk.js","sourcesContent":["import { Skeleton } from '@mui/material';\r\nimport React, { Fragment } from 'react';\r\nimport './MobSlider.scss';\r\n\r\nconst MobSlider = props => {\r\n  const { imageConfig, movieDatas } = props;\r\n  const skelDefaultArr = [0, 1, 2, 3, 4, 5, 6, 7];\r\n\r\n  return (\r\n    <div className=\"mob-slider\">\r\n      <ul>\r\n        {movieDatas.results.length > 0 ? (\r\n          <Fragment>\r\n            {movieDatas.results.map(data => {\r\n              return (\r\n                <li>\r\n                  <img\r\n                    src={`${imageConfig.base_url}${imageConfig.poster_sizes[1]}${data.poster_path}`}\r\n                  />\r\n                </li>\r\n              );\r\n            })}\r\n          </Fragment>\r\n        ) : (\r\n          <Fragment>\r\n            {skelDefaultArr.map((data, index) => {\r\n              return (\r\n                <li>\r\n                  <Skeleton\r\n                    className=\"custom-sk\"\r\n                    sx={{ bgcolor: 'grey.900' }}\r\n                    variant=\"rectangular\"\r\n                  />\r\n                </li>\r\n              );\r\n            })}\r\n          </Fragment>\r\n        )}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MobSlider;\r\n","import React, { Fragment, useEffect, useState } from 'react';\r\nimport './Home.scss';\r\nimport { isMobile } from 'react-device-detect';\r\nimport axios from 'axios';\r\nimport { Skeleton } from '@mui/material';\r\nimport MobSlider from '../components/MobSlider';\r\n\r\nconst Home = props => {\r\n  const { imageConfig, popularDatas, nowPlayingDatas, upcomingDatas } = props;\r\n\r\n  return (\r\n    <Fragment>\r\n      {isMobile ? (\r\n        <div className=\"mob-home\">\r\n          <div className=\"main-backdrop\">\r\n            {popularDatas.results.length > 0 ? (\r\n              <img\r\n                src={`${imageConfig.base_url}${imageConfig.backdrop_sizes[3]}${popularDatas.results[0].backdrop_path}`}\r\n              />\r\n            ) : (\r\n              <div className=\"skel-wrap\">\r\n                <Skeleton sx={{ bgcolor: 'grey.900' }} variant=\"rectangular\" height={'100%'} />\r\n              </div>\r\n            )}\r\n\r\n            <div className=\"info-wrap\">\r\n              {popularDatas.results.length > 0 ? (\r\n                <Fragment>\r\n                  <div className=\"title\">{popularDatas.results[0].title}</div>\r\n                  <div className=\"overview\">{popularDatas.results[0].overview}</div>\r\n                </Fragment>\r\n              ) : (\r\n                <Fragment>\r\n                  <div className=\"title\">\r\n                    <Skeleton sx={{ bgcolor: 'grey.900' }} variant=\"rectangular\" width={'160px'} />\r\n                  </div>\r\n                  <div className=\"overview\">\r\n                    <Skeleton sx={{ bgcolor: 'grey.900' }} variant=\"rectangular\" height={'70px'} />\r\n                  </div>\r\n                </Fragment>\r\n              )}\r\n            </div>\r\n          </div>\r\n          <div className=\"contents-wrap\">\r\n            <div className=\"slider-box\">\r\n              <div className=\"category-title\">인기 작품들</div>\r\n              <MobSlider imageConfig={imageConfig} movieDatas={popularDatas} />\r\n            </div>\r\n            <div className=\"slider-box\">\r\n              <div className=\"category-title\">현재 상영중</div>\r\n              <MobSlider imageConfig={imageConfig} movieDatas={nowPlayingDatas} />\r\n            </div>\r\n            <div className=\"slider-box\">\r\n              <div className=\"category-title\">개봉 예정</div>\r\n              <MobSlider imageConfig={imageConfig} movieDatas={upcomingDatas} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div className=\"pc-home\">PC</div>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { Fragment, useEffect, useRef, useState } from 'react';\r\nimport './Header.scss';\r\nimport { BrowserView, MobileView, isMobile } from 'react-device-detect';\r\nimport { useMediaQuery } from 'react-responsive';\r\nimport { Link, NavLink } from 'react-router-dom';\r\n\r\nconst Header = () => {\r\n  const [isShow, setIsShow] = useState(true);\r\n  const [isDrop, setIsDrop] = useState(false);\r\n  let prevScrollpos = window.pageYOffset;\r\n  const isTabletOrMobile = useMediaQuery({ query: '(max-width: 767px)' });\r\n  const isSmallWitdh = useMediaQuery({ query: '(max-width: 575px)' });\r\n  const mobNavRef = useRef();\r\n  const navIcRef = useRef();\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('scroll', handleScroll);\r\n    window.addEventListener('mousedown', closeMobNav);\r\n    return () => {\r\n      console.log('컴포넌트 종료');\r\n      window.removeEventListener('scroll', handleScroll);\r\n      window.removeEventListener('mousedown', closeMobNav);\r\n    };\r\n  }, []);\r\n\r\n  const handleScroll = () => {\r\n    var currentScrollPos = window.pageYOffset;\r\n\r\n    if (isMobile) {\r\n      if (currentScrollPos < 64) {\r\n        setIsShow(true);\r\n        setIsDrop(false);\r\n      } else {\r\n        if (prevScrollpos > currentScrollPos) {\r\n          setIsShow(true);\r\n          setIsDrop(false);\r\n        } else {\r\n          setIsShow(false);\r\n        }\r\n      }\r\n    } else {\r\n      if (prevScrollpos > currentScrollPos) {\r\n        setIsShow(true);\r\n        setIsDrop(false);\r\n      } else {\r\n        setIsShow(false);\r\n      }\r\n    }\r\n\r\n    prevScrollpos = currentScrollPos;\r\n  };\r\n\r\n  const closeMobNav = event => {\r\n    // 해당 박스 존재유무 파악\r\n    if (!!mobNavRef.current) {\r\n      // 해당 박스 영역 외에서 클릭했을시\r\n      if (!mobNavRef.current.contains(event.target)) {\r\n        // 아이콘 영역 외에서만 동작시키기위해\r\n        if (!navIcRef.current.contains(event.target)) {\r\n          setIsDrop(false);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const openDropNav = () => {\r\n    setIsDrop(!isDrop);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      {isMobile ? (\r\n        <header className={isShow ? 'mob-header' : 'mob-header hide'}>\r\n          <div className=\"header-items\">\r\n            <div className=\"left-wrap\">\r\n              {isTabletOrMobile && (\r\n                <button className=\"nav-open-btn\" onClick={openDropNav} ref={navIcRef}>\r\n                  <i className=\"fas fa-bars\"></i>\r\n                </button>\r\n              )}\r\n              <Link to=\"/\" className=\"main-ic\">\r\n                <i className=\"fas fa-video\"></i>\r\n              </Link>\r\n              {!isTabletOrMobile && <NavList name={null} reference={null} />}\r\n            </div>\r\n            <div className=\"right-wrap\">\r\n              <form>\r\n                <input type=\"text\" placeholder=\"검색\" />\r\n              </form>\r\n            </div>\r\n            {isTabletOrMobile && isDrop && isShow && (\r\n              <NavList name={'nav-dropdown'} reference={mobNavRef} />\r\n            )}\r\n          </div>\r\n        </header>\r\n      ) : (\r\n        <header className={isShow ? 'pc-header' : 'pc-header hide'}>\r\n          <div className=\"header-items\">\r\n            <div className=\"left-wrap\">\r\n              <Link to=\"/\" className=\"main-ic\">\r\n                <i className=\"fas fa-video\"></i>\r\n              </Link>\r\n              {isSmallWitdh ? (\r\n                <div className=\"dropdown-wrap\">\r\n                  <button className=\"dropdown-btn\">메뉴</button>\r\n                  <NavList name={'contents'} reference={null} />\r\n                </div>\r\n              ) : (\r\n                <NavList name={null} reference={null} />\r\n              )}\r\n            </div>\r\n            <div className=\"right-wrap\">\r\n              <form>\r\n                <input type=\"text\" placeholder=\"검색\" />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </header>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nconst NavList = props => {\r\n  const { name, reference } = props;\r\n\r\n  return (\r\n    <ul className={name} ref={reference}>\r\n      <li>\r\n        <NavLink to=\"/now-playing\" className={({ isActive }) => (isActive ? 'active' : 'nav-tab')}>\r\n          현재 상영 중\r\n        </NavLink>\r\n      </li>\r\n      <li>\r\n        <NavLink to=\"/popular\" className={({ isActive }) => (isActive ? 'active' : 'nav-tab')}>\r\n          인기\r\n        </NavLink>\r\n      </li>\r\n      <li>\r\n        <NavLink to=\"/upcoming\" className={({ isActive }) => (isActive ? 'active' : 'nav-tab')}>\r\n          개봉 예정\r\n        </NavLink>\r\n      </li>\r\n      <li>\r\n        <NavLink to=\"/my-list\" className={({ isActive }) => (isActive ? 'active' : 'nav-tab')}>\r\n          찜한 콘텐츠\r\n        </NavLink>\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import './App.scss';\r\nimport { Routes, Route } from 'react-router-dom';\r\nimport Home from './pages/Home';\r\nimport Header from './components/Header';\r\nimport { useEffect, useState } from 'react';\r\nimport { isMobile } from 'react-device-detect';\r\nimport axios from 'axios';\r\n\r\nfunction App() {\r\n  const api_key = 'dfebf9cfca6fde7ded33adb1b64575ab';\r\n  const baseURL = 'https://api.themoviedb.org';\r\n  const imageConfig = {\r\n    backdrop_sizes: ['w300', 'w780', 'w1280', 'original'],\r\n    poster_sizes: ['w92', 'w154', 'w185', 'w342', 'w500', 'w780', 'original'],\r\n    profile_sizes: ['w45', 'w185', 'h632', 'original'],\r\n    base_url: 'http://image.tmdb.org/t/p/',\r\n  };\r\n  const [popularDatas, setPopularDatas] = useState({\r\n    results: [],\r\n  });\r\n  const [nowPlayingDatas, setNowPlayingDatas] = useState({\r\n    results: [],\r\n  });\r\n  const [upcomingDatas, setUpcomingDatas] = useState({\r\n    results: [],\r\n  });\r\n\r\n  useEffect(() => {\r\n    axios({\r\n      method: 'get',\r\n      baseURL: 'https://api.themoviedb.org',\r\n      url: '/3/movie/popular',\r\n      params: {\r\n        api_key,\r\n        language: 'ko',\r\n      },\r\n    }).then(res => {\r\n      setPopularDatas({ ...res.data });\r\n    });\r\n    axios({\r\n      method: 'get',\r\n      baseURL: 'https://api.themoviedb.org',\r\n      url: '/3/movie/now_playing',\r\n      params: {\r\n        api_key,\r\n        language: 'ko',\r\n      },\r\n    }).then(res => {\r\n      setNowPlayingDatas({ ...res.data });\r\n    });\r\n    axios({\r\n      method: 'get',\r\n      baseURL: 'https://api.themoviedb.org',\r\n      url: '/3/movie/upcoming',\r\n      params: {\r\n        api_key,\r\n        language: 'ko',\r\n      },\r\n    }).then(res => {\r\n      setUpcomingDatas({ ...res.data });\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className={isMobile ? 'mob-app' : 'pc-app'}>\r\n        <Header />\r\n        <Routes>\r\n          <Route\r\n            path=\"/\"\r\n            element={\r\n              <Home\r\n                imageConfig={imageConfig}\r\n                popularDatas={popularDatas}\r\n                nowPlayingDatas={nowPlayingDatas}\r\n                upcomingDatas={upcomingDatas}\r\n              />\r\n            }\r\n          />\r\n          <Route path=\"now-playing\" element={<h3>now-playing</h3>} />\r\n          <Route path=\"popular\" element={<h3>popular11</h3>} />\r\n          <Route path=\"upcoming\" element={<h3>upcoming</h3>} />\r\n          <Route path=\"my-list\" element={<h3>upcoming</h3>} />\r\n        </Routes>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    {/* PUBLIC_URL은 /portfolio_2021을 의미 */}\r\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}